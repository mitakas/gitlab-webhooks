#!/usr/bin/env python

# Copyright 2014 Sebastian Jordan

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import argparse
import subprocess
import os.path

from gitlabhookcatcher.util import withTempDirDo

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "--repository",
        required=True,
        help="Repository where tags should be "\
             "uploaded from.  This must be an absolute path.")
    parser.add_argument(
        "--pypi",
        required=True,
        help="Name of the pypi repository.  This name should "\
             "appear in your .pypirc")
    args = parser.parse_args()
    withTempDirDo(makeTagReleases, 
                  repo= args.repository, 
                  pypi = args.pypi
    )


def makeTagReleases(repo, pypi):
    """Clone a repository and upload tags to pypi"""

    # clone repository
    clone_proc = subprocess.Popen(['git','clone',repo,'.'])
    clone_proc.communicate()
    if clone_proc.returncode != 0:
        raise Exception("Cannot clone repository \"%s\"" % repo)

    # get tags
    tag_proc = subprocess.Popen(['git','tag'],stdout=subprocess.PIPE)
    (tags, err) = tag_proc.communicate()

    # make releases
    for tag in tags.split():
        subprocess.call(['git','checkout',tag])
        if os.path.exists("setup.py"):
            subprocess.call(["python",
                             "setup.py",
                             "sdist",
                             "upload",
                             "-r",
                             pypi])
        
        

if __name__ == '__main__':
    main()
